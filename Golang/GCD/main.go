// GCD (Greatest Common Divisor) - это наибольший общий делитель двух чисел. Алгоритм нахождения GCD двух чисел использует концепцию деления с остатком.

// Один из наиболее известных алгоритмов нахождения GCD - это алгоритм Эвклида. Он работает следующим образом:

// Пусть у нас есть два числа a и b, и a >= b.
// Делаем операцию деления a на b с остатком.
// Если остаток от деления равен нулю, то b является GCD чисел a и b, и мы завершаем алгоритм.
// Если остаток не равен нулю, то мы присваиваем a значение b, а b значение остатка от деления, и возвращаемся к шагу 2.
// Этот процесс продолжается до тех пор, пока остаток не станет равен нулю. На этом этапе значение b будет GCD чисел a и b.

package main

import "fmt"

func main() {
	num1, num2 := 48, 18 // Пример чисел для проверки
	result := gcd(num1, num2)
	fmt.Printf("НОД чисел %d и %d: %d\n", num1, num2, result)
}

func gcd(a, b int) int {
	for b != 0 {
		a, b = b, a%b
	}
	return a
}
